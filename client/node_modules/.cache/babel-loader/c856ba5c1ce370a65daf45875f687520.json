{"ast":null,"code":"var _jsxFileName = \"/Users/sguitjens/BOOTCAMP/homework21/client/src/pages/Search.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Card, CardContent, CardHeader } from '@material-ui/core';\nimport Book from \"../components/Book\";\nimport { Input, FormBtn } from \"../components/Form\";\nimport API from \"./utils/API\";\n\nfunction Search() {\n  const [formObject, setFormObject] = useState({}); // using this to get book title\n\n  const [bookData, setBookData] = useState([]); // using this for book data from the API call\n\n  function handleInputChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    console.log(\"NAME\", value);\n    setFormObject({ ...formObject,\n      [name]: value\n    });\n    console.log(\"FORM OBJECT\", formObject);\n  }\n\n  useEffect(() => {\n    console.log(\"BOOK DATA EFFECT\", bookData);\n  });\n\n  function handleFormSubmit(event) {\n    console.log(\"FORM OBJECT\", formObject);\n    event.preventDefault();\n\n    if (formObject.title) {\n      API.getGoogleBooks(formObject.title) // want to get the list of books\n      .then(response => {\n        // console.log(\"RESPONSE\", response.data.items); // this is working\n        setBookData(response.data.items); // console.log(\"BOOK DATA\", bookData);\n      }).catch(err => console.log(\"ERROR\", err));\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"search-page-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"book-search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, \"Search For a Book\"), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"standard-full-width\",\n    onChange: handleInputChange,\n    name: \"title\",\n    placeholder: \"Search for a book by title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormBtn, {\n    disabled: !formObject.title,\n    onClick: handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \"Submit\")))), bookData.map(book => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Book, {\n    title: book.volumeInfo.title,\n    description: book.volumeInfo.description // image={book.volumeInfo.imageLinks.thumbnail ? book.volumeInfo.imageLinks.thumbnail : null}\n    ,\n    infoLink: book.volumeInfo.infoLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  })))));\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/sguitjens/BOOTCAMP/homework21/client/src/pages/Search.js"],"names":["React","useState","useEffect","Card","CardContent","CardHeader","Book","Input","FormBtn","API","Search","formObject","setFormObject","bookData","setBookData","handleInputChange","event","name","value","target","console","log","handleFormSubmit","preventDefault","title","getGoogleBooks","then","response","data","items","catch","err","map","book","volumeInfo","description","infoLink"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Card, CardContent, CardHeader } from '@material-ui/core';\nimport Book from \"../components/Book\";\nimport { Input, FormBtn, } from \"../components/Form\";\nimport API from \"./utils/API\";\n\nfunction Search() {\n  const [formObject, setFormObject] = useState({}); // using this to get book title\n  const [bookData, setBookData] = useState([]); // using this for book data from the API call\n\n  function handleInputChange(event) {\n    const { name, value } = event.target;\n    console.log(\"NAME\", value);\n    setFormObject({...formObject, [name]: value});\n    console.log(\"FORM OBJECT\", formObject);\n  }\n\n  useEffect(() => {\n    console.log(\"BOOK DATA EFFECT\", bookData);\n  })\n\n  function handleFormSubmit(event) {\n    console.log(\"FORM OBJECT\", formObject)\n    event.preventDefault();\n    if(formObject.title) {\n      API.getGoogleBooks(formObject.title) // want to get the list of books\n      .then(response => {\n        // console.log(\"RESPONSE\", response.data.items); // this is working\n        setBookData(response.data.items);\n        // console.log(\"BOOK DATA\", bookData);\n      })\n      .catch(err => console.log(\"ERROR\", err));\n    }\n  }\n\n  return (\n    <div className=\"search-page\">\n      <header className=\"search-page-header\">\n      </header>\n      <div className=\"book-search\">\n        {/* <Title></Title> */}\n        {/* <SearchForm></SearchForm> */}\n        <Card>\n          <CardHeader>\n            Search For a Book\n          </CardHeader>\n          <CardContent>\n            <form>\n                <Input id=\"standard-full-width\"\n                  onChange={handleInputChange}\n                  name=\"title\"\n                  placeholder=\"Search for a book by title\"\n                />\n                <FormBtn\n                  disabled={!(formObject.title)}\n                  onClick={handleFormSubmit}\n                >\n                  Submit\n                </FormBtn>\n            </form>\n        </CardContent>\n        </Card>\n        {bookData.map(book => (\n          <div>\n          <Book\n            title={book.volumeInfo.title}\n            description={book.volumeInfo.description}\n            // image={book.volumeInfo.imageLinks.thumbnail ? book.volumeInfo.imageLinks.thumbnail : null}\n            infoLink={book.volumeInfo.infoLink}\n          ></Book>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}