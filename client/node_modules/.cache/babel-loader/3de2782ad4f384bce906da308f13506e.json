{"ast":null,"code":"var _jsxFileName = \"/Users/sguitjens/BOOTCAMP/homework21/client/src/pages/Search.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Card, CardContent, CardHeader } from '@material-ui/core';\nimport Book from \"../components/Book\";\nimport { FormInput, FormBtn } from \"../components/FormInput\";\nimport API from \"./utils/API\";\n\nfunction Search() {\n  const [formObject, setFormObject] = useState({}); // using this to get book title\n\n  const [bookData, setBookData] = useState([]); // using this for book data from the API call\n\n  function handleInputChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormObject({ ...formObject,\n      \"title\": value\n    }); // had to hard code 'title' for some reason\n  }\n\n  useEffect(() => {\n    console.log(\"BOOK DATA EFFECT\", bookData);\n    console.log(\"FORMOBJECT\", formObject);\n  });\n\n  function handleFormSubmit(event) {\n    console.log(\"FORM OBJECT\", formObject);\n    event.preventDefault();\n\n    if (formObject.title) {\n      API.getGoogleBooks(formObject.title) // want to get the list of books\n      .then(response => {\n        console.log(\"IMAGE LINKS\".response.data.items[0].volumeInfo.imageLinks);\n        setBookData(response.data.items);\n      }).catch(err => console.log(\"ERROR\", err));\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"search-page-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"book-search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    title: \"Search for a Book\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    id: \"standard-full-width\",\n    onChange: handleInputChange,\n    label: \"Title\",\n    placeholder: \"Search for a book by title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormBtn, {\n    disabled: !formObject.title,\n    onClick: handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"SUBMIT\"))), bookData.map(book => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Book, {\n    title: book.volumeInfo.title,\n    description: book.volumeInfo.description // image={book.volumeInfo.imageLinks.thumbnail ?\n    //   book.volumeInfo.imageLinks.thumbnail :\n    //   \"/images/no_picture_available.png\"}\n    ,\n    image: \"/images/no_picture_available.png\",\n    infoLink: book.volumeInfo.infoLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  })))));\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/sguitjens/BOOTCAMP/homework21/client/src/pages/Search.js"],"names":["React","useState","useEffect","Card","CardContent","CardHeader","Book","FormInput","FormBtn","API","Search","formObject","setFormObject","bookData","setBookData","handleInputChange","event","name","value","target","console","log","handleFormSubmit","preventDefault","title","getGoogleBooks","then","response","data","items","volumeInfo","imageLinks","catch","err","map","book","description","infoLink"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Card, CardContent, CardHeader } from '@material-ui/core';\nimport Book from \"../components/Book\";\nimport { FormInput, FormBtn } from \"../components/FormInput\";\nimport API from \"./utils/API\";\n\nfunction Search() {\n  const [formObject, setFormObject] = useState({}); // using this to get book title\n  const [bookData, setBookData] = useState([]); // using this for book data from the API call\n\n  function handleInputChange(event) {\n    const { name, value } = event.target;\n    setFormObject({...formObject, \"title\": value}); // had to hard code 'title' for some reason\n  }\n\n  useEffect(() => {\n    console.log(\"BOOK DATA EFFECT\", bookData);\n    console.log(\"FORMOBJECT\", formObject);\n  })\n\n  function handleFormSubmit(event) {\n    console.log(\"FORM OBJECT\", formObject)\n    event.preventDefault();\n    if(formObject.title) {\n      API.getGoogleBooks(formObject.title) // want to get the list of books\n      .then(response => {\n        console.log(\"IMAGE LINKS\". response.data.items[0].volumeInfo.imageLinks)\n        setBookData(response.data.items);\n      })\n      .catch(err => console.log(\"ERROR\", err));\n    }\n  }\n\n  return (\n    <div className=\"search-page\">\n      <header className=\"search-page-header\">\n      </header>\n      <div className=\"book-search\">\n        {/* <Title></Title> */}\n        {/* <SearchForm></SearchForm> */}\n        <Card>\n          <CardHeader\n            title=\"Search for a Book\"\n          >\n          </CardHeader>\n          <CardContent>\n            <FormInput\n              id=\"standard-full-width\"\n              onChange={handleInputChange}\n              label=\"Title\"\n              placeholder=\"Search for a book by title\"\n              >\n            </FormInput>\n            <FormBtn\n              disabled={!(formObject.title)}\n              onClick={handleFormSubmit}>\n              SUBMIT\n            </FormBtn>\n        </CardContent>\n        </Card>\n        {bookData.map(book => (\n          <div>\n          <Book\n            title={book.volumeInfo.title}\n            description={book.volumeInfo.description}\n            // image={book.volumeInfo.imageLinks.thumbnail ?\n            //   book.volumeInfo.imageLinks.thumbnail :\n            //   \"/images/no_picture_available.png\"}\n            image={\"/images/no_picture_available.png\"}\n            infoLink={book.volumeInfo.infoLink}\n          ></Book>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}