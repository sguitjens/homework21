{"ast":null,"code":"var _jsxFileName = \"/Users/sguitjens/BOOTCAMP/homework21/client/src/pages/Search.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Card, CardContent, CardHeader } from '@material-ui/core';\nimport Book from \"../components/Book\";\nimport Header from \"../components/Header\";\nimport { FormInput, FormBtn } from \"../components/FormInput\";\nimport API from \"./utils/API\";\n\nfunction Search() {\n  const [formObject, setFormObject] = useState({}); // using this to get book title\n\n  const [bookData, setBookData] = useState({\n    items: null\n  }); // using this for book data from the API call\n\n  function handleInputChange(event) {\n    const {\n      value\n    } = event.target;\n    setFormObject({ ...formObject,\n      \"title\": value\n    }); // had to hard code 'title' for some reason\n  }\n\n  useEffect(() => {\n    console.log(\"BOOK DATA EFFECT\", bookData.items);\n    console.log(\"just book data\", bookData); // console.log(bookData[0].volumeInfo.imageLinks);\n\n    console.log(\"FORMOBJECT\", formObject);\n  });\n\n  function handleFormSubmit(event) {\n    console.log(\"FORM OBJECT\", formObject);\n    event.preventDefault();\n\n    if (formObject.title) {\n      API.getGoogleBooks(formObject.title) // want to get the list of books\n      .then(response => {\n        setBookData(response.data.items);\n      }).catch(err => console.log(\"ERROR\", err));\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    title: \"Search for a Book\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    id: \"standard-full-width\",\n    onChange: handleInputChange,\n    label: \"Title\",\n    placeholder: \"Search for a book by title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormBtn, {\n    disabled: !formObject.title,\n    onClick: handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, \"SUBMIT\"))), !bookData ? \"\" : bookData.items.map(book => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Book, {\n    title: book.volumeInfo.title,\n    author: book.volumeInfo.authors,\n    description: book.volumeInfo.description,\n    image: !book.volumeInfo.imageLinks.thumbnail ? \"/images/no_picture_available.png\" : book.volumeInfo.imageLinks.thumbnail // image={\"/images/no_picture_available.png\"}\n    ,\n    infoLink: book.volumeInfo.infoLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }))));\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/sguitjens/BOOTCAMP/homework21/client/src/pages/Search.js"],"names":["React","useState","useEffect","Card","CardContent","CardHeader","Book","Header","FormInput","FormBtn","API","Search","formObject","setFormObject","bookData","setBookData","items","handleInputChange","event","value","target","console","log","handleFormSubmit","preventDefault","title","getGoogleBooks","then","response","data","catch","err","map","book","volumeInfo","authors","description","imageLinks","thumbnail","infoLink"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Card, CardContent, CardHeader } from '@material-ui/core';\nimport Book from \"../components/Book\";\nimport Header from \"../components/Header\";\nimport { FormInput, FormBtn } from \"../components/FormInput\";\nimport API from \"./utils/API\";\n\nfunction Search() {\n  const [formObject, setFormObject] = useState({}); // using this to get book title\n  const [bookData, setBookData] = useState({items: null}); // using this for book data from the API call\n\n  function handleInputChange(event) {\n    const { value } = event.target;\n    setFormObject({...formObject, \"title\": value}); // had to hard code 'title' for some reason\n  }\n\n  useEffect(() => {\n    console.log(\"BOOK DATA EFFECT\", bookData.items);\n    console.log(\"just book data\", bookData);\n    // console.log(bookData[0].volumeInfo.imageLinks);\n    console.log(\"FORMOBJECT\", formObject);\n  })\n\n  function handleFormSubmit(event) {\n    console.log(\"FORM OBJECT\", formObject)\n    event.preventDefault();\n    if(formObject.title) {\n      API.getGoogleBooks(formObject.title) // want to get the list of books\n      .then(response => {\n        setBookData(response.data.items);\n      })\n      .catch(err => console.log(\"ERROR\", err));\n    }\n  }\n\n  return (\n    <div>\n      <Header></Header>\n      <Card>\n        <CardHeader\n          title=\"Search for a Book\"\n        >\n        </CardHeader>\n        <CardContent>\n          <FormInput\n            id=\"standard-full-width\"\n            onChange={handleInputChange}\n            label=\"Title\"\n            placeholder=\"Search for a book by title\"\n            >\n          </FormInput>\n          <FormBtn\n            disabled={!(formObject.title)}\n            onClick={handleFormSubmit}>\n            SUBMIT\n          </FormBtn>\n        </CardContent>\n      </Card>\n        {/* {bookData.map(book => (\n          <div>\n          <Book\n            title={book.volumeInfo.title}\n            author={book.volumeInfo.authors}\n            description={book.volumeInfo.description}\n            image={!book.volumeInfo.imageLinks.thumbnail ? \n            \"/images/no_picture_available.png\" :\n              book.volumeInfo.imageLinks.thumbnail\n              }\n            // image={\"/images/no_picture_available.png\"}\n            infoLink={book.volumeInfo.infoLink}\n          ></Book>\n          </div>\n        ))} */}\n\n        {!bookData ? \"\" :\n          bookData.items.map(book => (\n            <div>\n            <Book\n              title={book.volumeInfo.title}\n              author={book.volumeInfo.authors}\n              description={book.volumeInfo.description}\n              image={!book.volumeInfo.imageLinks.thumbnail ? \n              \"/images/no_picture_available.png\" :\n                book.volumeInfo.imageLinks.thumbnail\n                }\n              // image={\"/images/no_picture_available.png\"}\n              infoLink={book.volumeInfo.infoLink}\n            ></Book>\n            </div>\n          ))\n        }\n\n    </div>\n  );\n}\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}