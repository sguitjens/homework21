{"ast":null,"code":"var _jsxFileName = \"/Users/sguitjens/BOOTCAMP/homework21/client/src/pages/Search.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Card, CardContent, CardHeader } from '@material-ui/core';\nimport Book from \"../components/Book\";\nimport Header from \"../components/Header\";\nimport { FormInput, FormBtn } from \"../components/FormInput\";\nimport API from \"./utils/API\";\n\nfunction Search() {\n  const [formObject, setFormObject] = useState({}); // using this to get book title\n\n  const [bookData, setBookData] = useState({\n    items: []\n  }); // using this for book data from the API call\n\n  function handleInputChange(event) {\n    const {\n      value\n    } = event.target;\n    setFormObject({ ...formObject,\n      \"title\": value\n    }); // had to hard code 'title' for some reason\n  }\n\n  useEffect(() => {// console.log(\"BOOK DATA EFFECT\", bookData.items);\n    // console.log(\"just book data\", bookData);\n    // console.log(bookData[0].volumeInfo.imageLinks);\n    // console.log(\"FORMOBJECT\", formObject);\n  });\n\n  function handleFormSubmit(event) {\n    console.log(\"FORM OBJECT\", formObject);\n    event.preventDefault();\n\n    if (formObject.title) {\n      API.getGoogleBooks(formObject.title) // want to get the list of books\n      .then(response => {\n        console.log(\"FORM SUBMIT RESPONSE\", response);\n      }).catch(err => console.log(\"ERROR\", err));\n    }\n  }\n\n  function handleSaveClick(event, id) {\n    event.preventDefault();\n    const bookToSave = bookData.items.find(book => book.id = id);\n    console.log(\"bookData.items\", bookData.items);\n    console.log(\"bookToSave\", bookToSave);\n    API.saveBook({\n      // FAILS\n      title: bookToSave.title,\n      authors: bookToSave.authors,\n      description: bookToSave.description,\n      image: bookToSave.image,\n      infoLink: bookToSave.infoLink\n    }).then(result => console.log(result)).catch(err => console.log(err));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    title: \"Search for a Book\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    id: \"standard-full-width\",\n    onChange: handleInputChange,\n    label: \"Title\",\n    placeholder: \"Search for a book by title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormBtn, {\n    disabled: !formObject.title,\n    onClick: handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, \"SEARCH\"))), bookData.items.map((book, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Book, {\n    leftButton: \"View\",\n    rightButton: \"Save\",\n    title: book.volumeInfo.title,\n    authors: book.volumeInfo.authors,\n    description: book.volumeInfo.description,\n    image: book.volumeInfo.imageLinks ? book.volumeInfo.imageLinks.thumbnail : \"/images/no_picture_available.png\",\n    infoLink: book.volumeInfo.infoLink,\n    id: book.id,\n    handleSaveClick: handleSaveClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/sguitjens/BOOTCAMP/homework21/client/src/pages/Search.js"],"names":["React","useState","useEffect","Card","CardContent","CardHeader","Book","Header","FormInput","FormBtn","API","Search","formObject","setFormObject","bookData","setBookData","items","handleInputChange","event","value","target","handleFormSubmit","console","log","preventDefault","title","getGoogleBooks","then","response","catch","err","handleSaveClick","id","bookToSave","find","book","saveBook","authors","description","image","infoLink","result","map","index","volumeInfo","imageLinks","thumbnail"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Card, CardContent, CardHeader } from '@material-ui/core';\nimport Book from \"../components/Book\";\nimport Header from \"../components/Header\";\nimport { FormInput, FormBtn } from \"../components/FormInput\";\nimport API from \"./utils/API\";\n\nfunction Search() {\n  const [formObject, setFormObject] = useState({}); // using this to get book title\n  const [bookData, setBookData] = useState({items: []}); // using this for book data from the API call\n\n  function handleInputChange(event) {\n    const { value } = event.target;\n    setFormObject({...formObject, \"title\": value}); // had to hard code 'title' for some reason\n  }\n\n  useEffect(() => {\n    // console.log(\"BOOK DATA EFFECT\", bookData.items);\n    // console.log(\"just book data\", bookData);\n    // console.log(bookData[0].volumeInfo.imageLinks);\n    // console.log(\"FORMOBJECT\", formObject);\n  })\n\n  function handleFormSubmit(event) {\n    console.log(\"FORM OBJECT\", formObject)\n    event.preventDefault();\n    if(formObject.title) {\n      API.getGoogleBooks(formObject.title) // want to get the list of books\n      .then(response => {\n        console.log(\"FORM SUBMIT RESPONSE\", response)\n      })\n      .catch(err => console.log(\"ERROR\", err));\n    }\n  }\n\n  function handleSaveClick(event, id) {\n    event.preventDefault();\n    const bookToSave = bookData.items.find(book => book.id = id);\n    console.log(\"bookData.items\", bookData.items);\n    console.log(\"bookToSave\", bookToSave);\n    API.saveBook({ // FAILS\n      title: bookToSave.title,\n      authors: bookToSave.authors,\n      description: bookToSave.description,\n      image: bookToSave.image,\n      infoLink: bookToSave.infoLink\n    }).then(result => console.log(result))\n    .catch(err => console.log(err));\n  }\n\n  return (\n    <div>\n      <Header></Header>\n      <Card>\n        <CardHeader\n          title=\"Search for a Book\"\n        >\n        </CardHeader>\n        <CardContent>\n          <FormInput\n            id=\"standard-full-width\"\n            onChange={handleInputChange}\n            label=\"Title\"\n            placeholder=\"Search for a book by title\"\n            >\n          </FormInput>\n          <FormBtn\n            disabled={!(formObject.title)}\n            onClick={handleFormSubmit}>\n            SEARCH\n          </FormBtn>\n        </CardContent>\n      </Card>\n        {bookData.items.map((book, index) => (\n          <div key={index}>\n          <Book\n            leftButton=\"View\"\n            rightButton=\"Save\"\n            title={book.volumeInfo.title}\n            authors={book.volumeInfo.authors}\n            description={book.volumeInfo.description}\n            image={book.volumeInfo.imageLinks ? \n              book.volumeInfo.imageLinks.thumbnail :\n              \"/images/no_picture_available.png\"\n              }\n            infoLink={book.volumeInfo.infoLink}\n            id={book.id}\n            handleSaveClick={handleSaveClick}\n          ></Book>\n          </div>\n        ))}\n    </div>\n  );\n}\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}